# Generated by Django 4.0.6 on 2024-06-30 17:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apartment_name', models.CharField(max_length=255)),
                ('year_built', models.IntegerField()),
                ('area', models.DecimalField(decimal_places=2, max_digits=8)),
                ('district_located', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('apartment_description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Vacant', 'Vacant'), ('Occupied', 'Occupied')], default='Vacant', max_length=255)),
                ('video', models.FileField(blank=True, null=True, upload_to='apartment_videos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts_app.owner')),
            ],
            options={
                'db_table': 'apartments',
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_name', models.CharField(max_length=255)),
                ('rent_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('deposit_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('year_built', models.IntegerField()),
                ('area', models.DecimalField(decimal_places=2, max_digits=8)),
                ('district_located', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('house_description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Vacant', 'Vacant'), ('Occupied', 'Occupied')], default='Vacant', max_length=255)),
                ('no_of_bathrooms', models.IntegerField()),
                ('no_of_rooms', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='houses', to='accounts_app.owner')),
            ],
            options={
                'db_table': 'houses',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=255)),
                ('room_type', models.CharField(choices=[('master', 'Master Room'), ('single', 'Single Room'), ('one_bedroom', 'One Bedroom'), ('two_bedroom', 'Two Bedroom'), ('three_bedroom', 'Three Bedroom')], max_length=255)),
                ('floor_number', models.IntegerField()),
                ('rent_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('deposit_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('room_description', models.TextField(blank=True, null=True)),
                ('room_image', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('status', models.CharField(choices=[('Vacant', 'Vacant'), ('Occupied', 'Occupied')], default='Vacant', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='rental_property_app.apartment')),
            ],
            options={
                'db_table': 'rooms',
            },
        ),
        migrations.CreateModel(
            name='TenantIdentification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(help_text="Type of identification document (e.g., Passport, Driver's License)", max_length=255)),
                ('identification_number', models.CharField(help_text='Identification number', max_length=255)),
                ('document_file', models.FileField(help_text='Upload a scan or photo of the identification document.', upload_to='identification_docs/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='identification', to='accounts_app.tenant')),
            ],
            options={
                'db_table': 'tenant_identifications',
            },
        ),
        migrations.CreateModel(
            name='RoomInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(default='', editable=False, max_length=12, unique=True)),
                ('amount_due', models.DecimalField(decimal_places=2, max_digits=8)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=8)),
                ('rest_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('invoice_status', models.CharField(choices=[('Paid', 'Paid'), ('Pending', 'Pending'), ('Overdue', 'Overdue')], default='Pending', max_length=255)),
                ('invoice_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='rental_property_app.room')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='accounts_app.tenant')),
            ],
            options={
                'db_table': 'room_invoices',
            },
        ),
        migrations.CreateModel(
            name='RoomComplaints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complaint_type', models.CharField(max_length=255)),
                ('complaint_description', models.TextField()),
                ('complaint_status', models.CharField(choices=[('Unresolved', 'Unresolved'), ('In Progress', 'In Progress'), ('Resolved', 'Resolved')], default='Unresolved', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='rental_property_app.room')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='accounts_app.tenant')),
            ],
            options={
                'db_table': 'room_complaints',
            },
        ),
        migrations.CreateModel(
            name='RoomAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('move_in_date', models.DateField()),
                ('move_out_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='rental_property_app.room')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_assignments', to='accounts_app.tenant')),
            ],
            options={
                'db_table': 'room_assignments',
            },
        ),
        migrations.CreateModel(
            name='OwnerIdentification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(help_text="Type of identification document (e.g., Passport, Driver's License)", max_length=255)),
                ('identification_number', models.CharField(help_text='Identification number', max_length=255)),
                ('document_file', models.FileField(help_text='Upload a scan or photo of the identification document.', upload_to='identification_docs/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='identification', to='accounts_app.owner')),
            ],
            options={
                'db_table': 'owner_identifications',
            },
        ),
        migrations.CreateModel(
            name='HouseInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(default='', editable=False, max_length=12, unique=True)),
                ('amount_due', models.DecimalField(decimal_places=2, max_digits=8)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=8)),
                ('rest_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('invoice_status', models.CharField(choices=[('Paid', 'Paid'), ('Pending', 'Pending'), ('Overdue', 'Overdue')], default='Pending', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='rental_property_app.house')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='house_invoices', to='accounts_app.tenant')),
            ],
            options={
                'db_table': 'house_invoices',
            },
        ),
        migrations.CreateModel(
            name='HouseImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='house_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='rental_property_app.house')),
            ],
            options={
                'db_table': 'house_images',
            },
        ),
        migrations.CreateModel(
            name='HouseComplaints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complaint_type', models.CharField(max_length=255)),
                ('complaint_description', models.TextField()),
                ('complaint_status', models.CharField(choices=[('Unresolved', 'Unresolved'), ('In Progress', 'In Progress'), ('Resolved', 'Resolved')], default='Unresolved', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='rental_property_app.house')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='house_complaints', to='accounts_app.tenant')),
            ],
            options={
                'db_table': 'house_complaints',
            },
        ),
        migrations.CreateModel(
            name='HouseAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('move_in_date', models.DateField()),
                ('move_out_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='rental_property_app.house')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='house_assignments', to='accounts_app.tenant')),
            ],
            options={
                'db_table': 'house_assignments',
            },
        ),
        migrations.CreateModel(
            name='ApartmentImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='apartment_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='rental_property_app.apartment')),
            ],
            options={
                'db_table': 'apartment_images',
            },
        ),
        migrations.CreateModel(
            name='ApartmentFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_gym', models.BooleanField(default=False)),
                ('has_car_parking', models.BooleanField(default=False)),
                ('has_internet', models.BooleanField(default=False)),
                ('has_swimming_pool', models.BooleanField(default=False)),
                ('has_alarm', models.BooleanField(default=False)),
                ('has_air_conditioner', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='rental_property_app.apartment')),
            ],
            options={
                'db_table': 'apartment_features',
            },
        ),
    ]
